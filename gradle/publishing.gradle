apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

task generateMinPom {
    doLast {
        String pomHeader = """<?xml version="1.0" encoding="UTF-8"?>
            <project xmlns="http://maven.apache.org/POM/4.0.0"
                     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
                     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                <modelVersion>4.0.0</modelVersion>
                <groupId>${project.group}</groupId>
                <artifactId>${project.name}</artifactId>
                <version>${project.version}</version>
        """.stripIndent(12)

        def dependencyTemplate = { dep -> """
            <dependency>
                <groupId>$dep.group</groupId>
                <artifactId>$dep.name</artifactId>
                <version>$dep.version</version>
            </dependency>
        """.stripIndent(4)
        }

        String deps = configurations.runtime.allDependencies.findAll({it.name!= 'unspecified'})
            .collect({ dep -> dependencyTemplate(dep)}).join('')

        String pom = pomHeader
        if (deps) {
            pom += "    <dependencies>\n$deps\n    </dependencies>\n"
        }
        pom += "</project>"

        project.file("$buildDir/tmp/maven").mkdirs()
        project.file("$buildDir/tmp/maven/pom.xml").text = pom
    }
}

jar {
    dependsOn 'generateMinPom'
    manifest {
        attributes(
            'Created-By': buildCreatedBy,
            'x-Built-By': buildBy,
            'x-Build-Jdk': buildJdk,
            'x-Build-Date': buildDate,
            'x-Build-Time': buildTime,
            'x-Build-Revision': buildRevision,
            'Specification-Title': project.name,
            'Specification-Version': project.version,
            'Implementation-Title': project.name,
            'Implementation-Version': project.version,
            'Automatic-Module-Name': 'org.kordamp.' + project.name.replaceAll('-', '.')
        )
    }
    metaInf {
        from(rootProject.files('.')) {
            include 'LICENSE*'
        }
        from(rootProject.file('src/maven')) {
            into "maven/${project.group}/${project.name}"
            expand(
                'gradle_version': gradle.gradleVersion,
                'project_version': project.version,
                'project_group': project.group,
                'project_name': project.name,
            )
        }
        from(file("$buildDir/tmp/maven")) {
            into "maven/${project.group}/${project.name}"
        }
    }
}

publishing {
    publications {
        mavenCustom(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = project.name
                description = project.project_description
                url = project.project_url
                inceptionYear = '2015'
                packaging = 'jar'
                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
                scm {
                    url = project.project_scm
                }
                developers {
                    [
                        hansolo_ : 'Gerrit Grunwald',
                        aalmiray : 'Andres Almiray'
                    ].each { devId, devName ->
                        developer {
                            id = devId
                            name = devName
                        }
                    }
                }
            }
        }
    }
}

if (!project.hasProperty('bintrayUsername')) ext.bintrayUsername = ''
if (!project.hasProperty('bintrayApiKey')) ext.bintrayApiKey = ''
if (!project.hasProperty('mavenUsername')) ext.mavenUsername = ''
if (!project.hasProperty('mavenPassword')) ext.mavenPassword = ''

bintray {
    user = project.bintrayUsername
    key = project.bintrayApiKey
    publications = ['mavenCustom']
    pkg {
        repo = project.project_bintray_repo
        userOrg = project.project_bintray_org
        name = rootProject.name
        desc = rootProject.project_description
        licenses = ['Apache-2.0']
        labels = ['javafx','widgets']
        websiteUrl = project.project_url
        issueTrackerUrl = project.project_issues
        vcsUrl = project.project_scm
        publicDownloadNumbers = true
        githubRepo = 'aalmiray/harmonicfx'
        version {
            name = project.version
            vcsTag = "harmonicfx-${project.version}"
            mavenCentralSync {
                sync = true
                user = project.mavenUsername
                password = project.mavenPassword
            }
        }
    }
}
